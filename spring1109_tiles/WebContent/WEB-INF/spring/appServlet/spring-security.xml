<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security.xsd">
	
	<!-- 권한 이름 설정 polePrefix 커스텀-->
	<beans:bean id="roleVoter"
		class="org.springframework.security.access.vote.RoleVoter">
		<beans:property name="rolePrefix" value=""></beans:property>	
    </beans:bean>
	<!-- 기본 ACL을 변경 -->
	<beans:bean id="accessDecisionManager" 
		class="org.springframework.security.access.vote.AffirmativeBased">
		<beans:constructor-arg name="decisionVoters"  ref="roleVoter"/>
	</beans:bean>
	
	
	
	
	<!-- authentication-manager-ref 권한 정보를 가지는 객체 -->
	<http access-decision-manager-ref="accessDecisionManager" 
	authentication-manager-ref="jdbc-auth">
		<intercept-url pattern="/admin/**" access="Admin" />
		<intercept-url pattern="/user/**" access="Admin,User" />
		<intercept-url pattern="/home" access="Admin,User,Anonymous" />
		<intercept-url pattern="/tvo/list" access="Admin,User,Anonymous" />
		<form-login login-page="/login" authentication-failure-url="/denied"
			username-parameter="username"
			password-parameter="password"
		/>
		<logout invalidate-session="true" 
			logout-url="/logout" 
			logout-success-url="/logout"
		/>
		<access-denied-handler error-page="/denied" />
		<anonymous enabled="true" granted-authority="Anonymous" username="anon_User"/>
		<session-management invalid-session-url="/login" >
			<concurrency-control max-sessions="1" 
				expired-url="/login"/>
		</session-management>
	</http>
	
	
	<!--  authentication-manager 랑 연동할 dataSource--> 
	<!-- dataSource -->
	<beans:bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<beans:property name="jndiName" value="java:comp/env/jdbc/myora" />
	</beans:bean>
	
	<!-- users-by-username-query 유저 테이블로부터 정보를 가져온다 -->
	<!-- authorities-by-username-query Roles 테이블로부터 권한 정보를 가져온다 -->
	<authentication-manager id="jdbc-auth">
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select username,password,enabled from employees where username=?"
				authorities-by-username-query="select username,role from roles where username=?"
			/>
		</authentication-provider>
	</authentication-manager>


</beans:beans>